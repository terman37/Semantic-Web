prefix h: <http://www.inria.fr/2007/09/11/humans.rdfs#>

select * where { ?x a ?t . filter(strstarts(?t, h:)) }

select * where {
  	<http://www.inria.fr/2007/09/11/humans.rdfs-instances#John> ?p ?v
}

DESCRIBE <http://www.inria.fr/2007/09/11/humans.rdfs-instances#John> 

select * where {
  	?x h:shoesize ?y
}

select * where {
  ?x a h:Person . OPTIONAL { ?x h:shoesize ?y}
}

select * where {
  ?x a h:Person . OPTIONAL { ?x h:shoesize ?y; h:shirtsize ?z} filter (?y > 8 || ?z > 12)
}

select distinct ?x where {
  ?x h:hasChild ?y
}

SELECT distinct ?x
WHERE {
	?x a h:Person
	minus { ?x h:hasChild ?v}
}

SELECT *
WHERE {
	?x h:age?v
}

SELECT ?ans
WHERE {
	?x h:age?v; h:name "Mark" .
	bind(if ( ?v <18,"False","True") as ?ans)
}

SELECT *
WHERE {
	?x h:age ?v .
	bind( (?v/2 =  FLOOR(?v/2)) AS ?ans)
}

INSERT {
	?v h:hasFriend ?r
}
WHERE {
	?r h:hasFriend ?v
}

ask { <http://www.inria.fr/2007/09/11/humans.rdfs-instances#Mark> h:age ?v . filter (?v < 18)} 


SELECT ?v (group_concat(?w) as ?g)
WHERE {
	?x h:shirtsize ?v ;
	h:name ?w .
}
GROUP BY ?v

CONSTRUCT { ?x h:seeAlso ?y} 
WHERE {
	?x h:shirtsize ?v .
	?y h:shirtsize ?w .
	filter (?x != ?y && ?v = ?w)
}

SELECT *
WHERE {
	?x h:seealso+ ?v .
}

SELECT (max(?v) as ?maxsize)
WHERE {
	?x h:shoesize ?v .
}

SELECT ?x 
WHERE {
	{
	SELECT (max(?v) as ?maxsize)
	WHERE { ?xx h:shoesize ?v } 
	}
	?x h:shoesize ?maxsize
}


prefix db: <http://dbpedia.org/ontology/>
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix h: <http://www.inria.fr/2007/09/11/humans.rdfs#>
construct  { ?x h:name ?nx . ?y h:name ?ny . ?x h:hasSpouse ?y } 
where {
  service <http://fr.dbpedia.org/sparql/> {
     select * where {
       ?x db:spouse ?y .
       ?x foaf:name ?nx .
       ?y foaf:name ?ny .
     } 
     limit 20
  }
}

